{"version":3,"sources":["components/weatherCards.js","components/getState.js","components/searchBar.js","App.js","reportWebVitals.js","scss/NHaasGroteskDSPro.ttf","index.js"],"names":["WeatherCards","weatherData","zipCode","image_url","city_name","state_code","zipcode","parseInt","state","min","max","code","long","filter","s","length","console","error","log","getStateName","tz","zipcode_to_timezone","lookup","useState","moment","format","current_time","setTime","sliderRef","useRef","useEffect","setTimeout","current","slickGoTo","timer","setInterval","clearInterval","dailyData","last_day","first_iter","x","inc","local_datetime","day","day_string","time","inc_temp_min","Math","round","inc_temp_max","current_temp","current_icon","current_alt","current_precip","push","slice","hour","swipe","window","addEventListener","e","deltaX","slickNext","slickPrev","className","class","alt","src","ref","dots","variableWidth","infinite","slidesToShow","focusOnSelect","arrows","draggable","rows","responsive","breakpoint","settings","Object","keys","map","key","index","reduce","a","b","times","obj","SearchBar","history","useHistory","params","URLSearchParams","location","search","get","zip","setZip","units","setUnits","fetchData","$","css","fetch","then","response","ok","json","Promise","reject","data","ReactDOM","render","document","getElementById","catch","style","onSubmit","preventDefault","set","toString","placeholder","type","onChange","target","value","maxLength","onClick","focus","Button","id","ToggleButtonGroup","exclusive","newUnits","aria-label","ToggleButton","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.1a7c37e3.chunk.js","sourcesContent":["import zipcode_to_timezone from 'zipcode-to-timezone';\nimport moment from 'moment-timezone';\nimport getStateName from './getState.js';\nimport React, { useEffect, useState, useRef } from 'react';\n\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n// Functional component for placing the dynamic weather information on the page\n\nexport default function WeatherCards ({weatherData, zipCode}) {\n\n  var image_url = 'https://openweathermap.org/img/wn/'  // URL for serving weather logos\n  var city_name = weatherData['city']['name'];          // City name from API\n  var state_code = getStateName(zipCode)['code'];       //Inferred state name from heuristic check\n  var tz = zipcode_to_timezone.lookup(zipCode);         // Timezone used for getting local time from zip code\n\n  // state for keeping the current 12-hr time updated on the app\n  const [current_time, setTime] = useState(moment.tz(moment(), tz).format('h:mm A'));\n\n  // Ref for the daily weather slider\n  const sliderRef = useRef();\n\n  // Invoked when the timezone variable is changed, indicating a change of the\n  //   zip code. Updates the current time when data is changed and every minute after\n  useEffect (() => {\n    setTime(moment.tz(moment(), tz).format('h:mm A'));\n    setTimeout(() => sliderRef.current.slickGoTo(0), 10); // bug if set immediately at init\n    const timer = setInterval(() => {\n      setTime(moment.tz(moment(), tz).format('h:mm A'));\n    }, 60 * 1000);\n    return () => {\n      clearInterval(timer);\n    }\n  }, [tz])\n\n  let dailyData = {};     // Dynamic object for storing daily data\n  let last_day = '';      // Comparison variable to see if day has updated\n  let first_iter = true;  // Catch first iteration case of the for loop\n\n  // Loop through every 3-hour increment from the API data\n  for (const x in weatherData['list']) {\n    var inc = weatherData['list'][x];\n\n    // Convert the UTC date time to the local timezone\n    var local_datetime = moment.tz(inc['dt_txt'] + '+0000', tz);\n    var day = local_datetime.format('YYYY-MM-DD');\n    var day_string = local_datetime.format('ddd, MMM Do');\n    var time = local_datetime.format('h:mm A');\n\n    // Max and min temps for the current iteration\n    var inc_temp_min = Math.round(inc['main']['temp_min']);\n    var inc_temp_max = Math.round(inc['main']['temp_max']);\n\n    // On first iter, put aside data to display for current weather\n    if (first_iter) {\n      var current_temp = Math.round(inc['main']['temp']);\n      var current_icon = inc['weather'][0]['icon'];\n      var current_alt = inc['weather'][0]['main'];\n      var current_precip = inc['pop'];\n      first_iter = false;\n    }\n\n    // Initialize day-based object on a new day\n    if (day !== last_day) {\n      dailyData[day] = {}\n      dailyData[day]['class_counts'] = {};    // counts of how many unique weather codes/icons\n      dailyData[day]['times'] = [];           // the incremental weather at every point of the day\n      dailyData[day]['string'] = day_string;  // readable format of the date\n      dailyData[day]['min'] = 10000000;       // min temp initialization\n      dailyData[day]['max'] = 0;              // max temp initialization\n    }\n\n    // Update min temp\n    if (inc_temp_min < dailyData[day]['min']) {\n      dailyData[day]['min'] = inc_temp_min;\n    }\n\n    // Update max temp\n    if (inc_temp_max > dailyData[day]['max']) {\n      dailyData[day]['max'] = inc_temp_max;\n    }\n\n    // Add specific weather from increment\n    dailyData[day]['times'].push({\n      \"time\": time,\n      \"weather\": inc['weather'][0],\n      \"temp\": Math.round(inc['main']['temp']),\n      \"pop\": inc['pop']\n    })\n\n    // If the current weather code/icon is not in the class_counts dict,\n    //   initialize a key-value pair for it\n    if (!dailyData[day]['class_counts'][inc['weather'][0]['icon'].slice(0,2) + 'd']) {\n      dailyData[day]['class_counts'][inc['weather'][0]['icon'].slice(0,2) + 'd'] = 0;\n    }\n\n    // If the increment is part of the daytime hours, increment it's total\n    //  - Helps with assuming the daily weather logo when rendering\n    if (local_datetime.hour() > 6 && local_datetime.hour() < 20) {\n      dailyData[day]['class_counts'][inc['weather'][0]['icon'].slice(0,2) + 'd'] += 1;\n    }\n\n    last_day = day;\n  }\n\n  // Added slider functionality to allow for left/right track pad swiping on desktop\n  var swipe = true;       // a sort of swipe state toggle\n  var swipeThresh = 0.5;  // Only register swipes above this threshold\n  var swipeDiv = 50;      // Swipe value divisor based on trial and error\n\n  // slide previous/next based on input value\n  const slide = (y) => {\n      (y > 0)\n        ? sliderRef.current.slickNext()\n        : sliderRef.current.slickPrev();\n  }\n\n  // Event listener for tracking the X speed of the track pad\n  // - When the swipe values gradually reduce to zero, they do not trigger\n  //   another swipe while below the threshold\n  window.addEventListener('wheel', (e) => {\n    if ((e.deltaX / swipeDiv >= swipeThresh || e.deltaX / swipeDiv <= -swipeThresh)\n      && swipe) {\n      swipe = false;\n      slide(e.deltaX);\n    } else {\n      swipe = true;\n    }\n  });\n\n  // Slick Slider settings for updating how many slides to show/scroll and other metadata\n\n  var settings = {\n    dots: true,\n    variableWidth: true,\n    infinite: false,\n    slidesToShow: 4,\n    focusOnSelect: false,\n    arrows: true,\n    draggable: true,\n    rows: 1,\n    swipe: true,\n    responsive: [\n      {\n        breakpoint: 40000,\n        settings: {\n          slidesToShow: 4,\n        }\n      },\n      {\n        breakpoint: 1490,\n        settings: {\n          slidesToShow: 3,\n        }\n      },\n      {\n        breakpoint: 1168,\n        settings: {\n          slidesToShow: 2,\n        }\n      },\n      {\n        breakpoint: 700,\n        settings: {\n          slidesToShow: 1,\n          variableWidth: false\n        }\n      }\n    ]\n  }\n\n  // RETURN COMMENTS\n  //\n  // - First, the current variables are placed at the top of the body content\n  //     - If there is a current chance of precip, it is shown.\n  // - The slider is initialized and React-ref'd so the functional component can\n  //   act upon it\n  // - Loop through each day object, and make the day header with high and low\n  //   temps and assumed daily icon\n  //    - The icon is assigned based on the day's code/icon that has the highest count\n  //    - Loop through each increment in the day, showing the temp, icon,\n  //      and precipitation if there is a chance\n\n  return (\n    <>\n      <div className=\"weather-header-wrapper\">\n        <h2 className=\"weather-header\">{city_name}, {state_code}</h2>\n        <div class=\"line-break\"></div>\n        <div className=\"current-time\">{current_time}</div>\n        <div className=\"current-weather\">{current_temp}&#730;</div>\n        <img className=\"current-icon\" alt={current_alt} src={image_url + current_icon + '@2x.png'} />\n        {\n          (current_precip > 0)\n            ? <span className=\"precip-percent\">{Math.round(current_precip * 100)}%</span>\n            : ''\n        }\n      </div>\n      <div className=\"day-container\">\n      <Slider ref={sliderRef} {...settings} className=\"custom-weather-slider\" >\n      {\n        Object.keys(dailyData).map((key, index) => {\n          return (index < 1000) ?\n            <div key={key} className=\"day-wrapper\">\n              <div className=\"date-wrapper\">\n                <span className=\"day-title\">{dailyData[key]['string']}</span>\n                <span className=\"max-temp\">{dailyData[key]['max']}&#730;</span>\n                <span className=\"min-temp\">{dailyData[key]['min']}&#730;</span>\n                <img className=\"daily-icon\" alt=\"daily-weather-icon\" src={image_url + Object.keys(dailyData[key]['class_counts']).reduce((a,b) => dailyData[key]['class_counts'][a] > dailyData[key]['class_counts'][b] ? a : b) + '@2x.png'} />\n              </div>\n              {\n                dailyData[key].times.map((obj, index) => {\n                return (\n                  <div className=\"time-percent-wrapper\">\n                  <div key={key + '-' + index} className=\"time-wrapper\">\n                    <span className=\"hour-time\">{obj['time']}</span>\n                    <span className=\"hour-temp\">{obj['temp']}&#730;</span>\n                    <img alt={obj['weather']['main']} src={image_url + obj['weather']['icon'] + '@2x.png'} />\n                    {\n                      (obj['pop'] > 0)\n                        ? <span className=\"precip-percent\">{Math.round(obj['pop'] * 100)}%</span>\n                        : ''\n                    }\n                  </div>\n\n                  </div>\n                )})\n              }\n            </div>\n          :\n            ''\n        })\n      }\n      </Slider>\n      </div>\n    </>\n  )\n}\n","export default function getStateName(zipcode) {\n    // Returns false on invalid zip-- else returns {code:\"XX\" long:\"XXXXXXXXX\"}\n\n    // Ensure param is a string to prevent unpredictable parsing results\n    if (typeof zipcode !== 'string') {\n        console.log('Must pass the zipcode as a string. -- Otherwise leading zeros could cause your zip code to be parsed outside base 10.');\n        return;\n    }\n\n    // Ensure you don't parse codes that start with 0 as octal values\n    zipcode = parseInt(zipcode,10);\n\n    // Code blocks alphabetized by state\n    var states = [{min: 35000, max:36999, code: 'AL', long: \"Alabama\"},\n    {min: 99500, max:99999, code: 'AK', long: \"Alaska\"},\n    {min: 85000, max:86999, code: 'AZ', long: \"Arizona\"},\n    {min: 71600, max:72999, code: 'AR', long: \"Arkansas\"},\n    {min: 90000, max:96699, code: 'CA', long: \"California\"},\n    {min: 80000, max:81999, code: 'CO', long: \"Colorado\"},\n    {min: 6000,  max:6999,  code: 'CT', long: \"Connecticut\"},\n    {min: 19700, max:19999, code: 'DE', long: \"Deleware\"},\n    {min: 32000, max:34999, code: 'FL', long: \"Florida\"},\n    {min: 30000, max:31999, code: 'GA', long: \"Georgia\"},\n    {min: 96700, max:96999, code: 'HI', long: \"Hawaii\"},\n    {min: 83200, max:83999, code: 'ID', long: \"Idaho\"},\n    {min: 60000, max:62999, code: 'IL', long: \"Illinois\"},\n    {min: 46000, max:47999, code: 'IN', long: \"Indiana\"},\n    {min: 50000, max:52999, code: 'IA', long: \"Iowa\"},\n    {min: 66000, max:67999, code: 'KS', long: \"Kansas\"},\n    {min: 40000, max:42999, code: 'KY', long: \"Kentucky\"},\n    {min: 70000, max:71599, code: 'LA', long: \"Louisiana\"},\n    {min: 3900,  max:4999,  code: 'ME', long: \"Maine\"},\n    {min: 20600, max:21999, code: 'MD', long: \"Maryland\"},\n    {min: 1000,  max:2799,  code: 'MA', long: \"Massachusetts\"},\n    {min: 48000, max:49999, code: 'MI', long: \"Michigan\"},\n    {min: 55000, max:56999, code: 'MN', long: \"Minnesota\"},\n    {min: 38600, max:39999, code: 'MS', long: \"Mississippi\"},\n    {min: 63000, max:65999, code: 'MO', long: \"Missouri\"},\n    {min: 59000, max:59999, code: 'MT', long: \"Montana\"},\n    {min: 27000, max:28999, code: 'NC', long: \"North Carolina\"},\n    {min: 58000, max:58999, code: 'ND', long: \"North Dakota\"},\n    {min: 68000, max:69999, code: 'NE', long: \"Nebraska\"},\n    {min: 88900, max:89999, code: 'NV', long: \"Nevada\"},\n    {min: 3000, max:3899, code: 'NH', long: \"New Hampshire\"},\n    {min: 7000, max:8999, code: 'NJ', long: \"New Jersey\"},\n    {min: 87000, max:88499, code: 'NM', long: \"New Mexico\"},\n    {min: 10000, max:14999, code: 'NY', long: \"New York\"},\n    {min: 43000, max:45999, code: 'OH', long: \"Ohio\"},\n    {min: 73000, max:74999, code: 'OK', long: \"Oklahoma\"},\n    {min: 97000, max:97999, code: 'OR', long: \"Oregon\"},\n    {min: 15000, max:19699, code: 'PA', long: \"Pennsylvania\"},\n    {min: 300, max:999, code: 'PR', long: \"Puerto Rico\"},\n    {min: 2800, max:2999, code: 'RI', long: \"Rhode Island\"},\n    {min: 29000, max:29999, code: 'SC', long: \"South Carolina\"},\n    {min: 57000, max:57999, code: 'SD', long: \"South Dakota\"},\n    {min: 37000, max:38599, code: 'TN', long: \"Tennessee\"},\n    {min: 75000, max:79999, code: 'TX', long: \"Texas\"},\n    {min: 88500, max:88599, code: 'TX', long: \"Texas\"},\n    {min: 84000, max:84999, code: 'UT', long: \"Utah\"},\n    {min: 5000, max:5999, code: 'VT', long: \"Vermont\"},\n    {min: 22000, max:24699, code: 'VA', long: \"Virgina\"},\n    {min: 20000, max:20599, code: 'DC', long: \"Washington DC\"},\n    {min: 98000, max:99499, code: 'WA', long: \"Washington\"},\n    {min: 24700, max:26999, code: 'WV', long: \"West Virginia\"},\n    {min: 53000, max:54999, code: 'WI', long: \"Wisconsin\"},\n    {min: 82000, max:83199, code: 'WY', long: \"Wyoming\"}];\n\n    var state = states.filter(function(s){\n        return s.min <= zipcode && s.max >= zipcode;\n    });\n\n    if (state.length === 0){\n        return false;\n    } else if (state.length > 1) {\n        console.error(\"Whoops found two states\");\n    }\n    return {code:state[0].code, long:state[0].long};\n\n}\n","import React, { useState, useEffect } from 'react';\nimport WeatherCards from './weatherCards.js'\nimport ReactDOM from 'react-dom';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useHistory } from \"react-router-dom\";\nimport $ from 'jquery';\n\n// Functional component for querying the API, maintaining state of user inputs\n\nexport default function SearchBar () {\n\n  const api_key = 'b8c57c1c1fe78770517a0b492af57a54';                 // woopsies!\n  const api_url = 'https://api.openweathermap.org/data/2.5/forecast';\n\n  // allows for pushing params to browser history\n  const history = useHistory();\n\n  // params variable to update/push to history\n  const params = new URLSearchParams(history.location.search);\n\n  // State management hooks for the user input zip codes and temperature units\n  const [zip, setZip] = useState(params.get('zip') || '');\n  const [units, setUnits] = useState((params.get('units') !== null && params.get('units') !== '') ? params.get('units') : 'imperial');\n\n\n  // On page load, fetch data if there is a zip code\n  useEffect(() => {\n    if (zip) {\n      fetchData(units);\n    }\n  },[])\n\n  // Display/hide clear button if there is any text entered\n  useEffect(() => {\n    (zip)\n    ? $('.zip-clear').css({'display': 'flex'})\n    : $('.zip-clear').css({'display': 'none'})\n  },[zip])\n\n  // Update zip code on entry\n  const changeZip = e => {\n    setZip(e.target.value);\n  }\n\n  // Clear zip and update params in URL\n  const clearZip = e => {\n    e.preventDefault();\n    setZip('');\n    params.set(\"zip\", '');\n    history.push({search: params.toString()});\n    $('.zip-input').focus();\n  }\n\n  // Fetch the API data, returning errors if the zip is either empty\n  // or does not return a 2xx code\n  // - Render the data with the functional component WeatherCards if 2xx response\n  function fetchData(units) {\n    fetch(`${api_url}?zip=${zip},us&temp_min&units=${units}&APPID=${api_key}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          if (zip === '') {\n            return Promise.reject('Please enter a zip code');\n          } else {\n            return Promise.reject('Unrecognized zip code');\n          }\n        }\n      })\n      .then(data => {\n        return ReactDOM.render(\n          <WeatherCards weatherData={data} zipCode={zip} />,\n          document.getElementById('weather-day-container')\n          );\n      })\n      .catch(error => {\n        return ReactDOM.render(\n          <div className=\"weather-header-wrapper\">\n            <h2 className=\"weather-header error\" style={{\"font-weight\": \"200\"}}>{error}</h2>\n          </div>,\n          document.getElementById('weather-day-container')\n        )\n      });\n  }\n\n  // Refresh the API search if the temperature units change, prevent the default degrees case\n  const changeUnits = (e, newUnits) => {\n    if (newUnits !== null) {\n      params.set('units', newUnits);\n      setUnits(newUnits, fetchData(newUnits));\n      history.push({search: params.toString()});\n    }\n  }\n\n  // On enter/'Check Weather', searcb for the current entered zip code\n  const submitZip = e => {\n    e.preventDefault();\n    params.set(\"zip\", zip);\n    history.push({search: params.toString()});\n    fetchData(units);\n  }\n\n  return (\n    <>\n    <form className=\"zip-form\" onSubmit={submitZip}>\n      <div className=\"zip-input-wrapper\">\n        <label className=\"zip-label\">\n          <input className=\"zip-input\" placeholder=\"Zip Code\" type=\"text\" onChange={changeZip} value={zip} maxLength=\"5\" />\n        </label>\n        <div className=\"zip-clear\" onClick={clearZip}><CloseIcon /></div>\n      </div>\n      <Button id=\"zip-submit\" type=\"submit\">Check Weather</Button>\n    </form>\n    <ToggleButtonGroup className=\"unit-buttons\" value={units} exclusive onChange={changeUnits} aria-label=\"temperature units\">\n      <ToggleButton value=\"imperial\">F&#730;</ToggleButton>\n      <ToggleButton value=\"metric\">C&#730;</ToggleButton>\n    </ToggleButtonGroup>\n    </>\n  )\n}\n","import { BrowserRouter as Router} from \"react-router-dom\";\nimport './scss/Fonts.scss';\nimport './scss/App.scss';\n\nimport SearchBar from './components/searchBar.js'\n\n// Using a router to update the URL params with zip/unit choices\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"outer-wrapper\">\n      <div className=\"nav-border-wrapper\">\n        <div className=\"nav-wrapper\">\n          <h1>\n            <span className=\"title-large\">WEATHER.BULLETIN</span>\n            <span className=\"title-small\">W.B</span>\n          </h1>\n          <SearchBar />\n        </div>\n      </div>\n\n      <div id=\"weather-day-container\"></div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/NHaasGroteskDSPro.1d3f2342.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './scss/NHaasGroteskDSPro.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}